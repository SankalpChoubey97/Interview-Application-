<body>
    <div class="confirmation-container">
        <h2>Are you sure you want to delete this interview?</h2>
        <form id="delete-form" action="/api/interview/viewStudent/<%= interviewID %>/deleteStudent/<%= studentID %>" method="POST">
            <button type="submit">Yes, Delete</button>
            <!-- Add an ID for the cancel button to capture the event -->
            <button type="button" id="cancel-button">Cancel</button>
        </form>
    </div>
</body>


<script>
    document.getElementById('delete-form').addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent default form submission

        const form = event.target; // Get the form element
        const actionUrl = form.action; // Extract the action URL from the form
        const token = localStorage.getItem('authToken'); // Fetch the token from local storage

        if (token) {
            try {
                const response = await fetch(actionUrl, {
                    method: 'POST',
                    headers: {
                        'Authorization': token, // Pass the token in the Authorization header
                        'Content-Type': 'application/json' // Set the content type to JSON
                    }
                });

                const result = await response.json();
                if(result.message=="success"){
                    const url = `/api/interview/viewStudent/<%= interviewID %>`; // The redirect URL after successful deletion
                    handleGetRequest(url); // Redirect to the interview page if deletion is successful
                } 
            } catch (error) {
                console.error('Error during delete request:', error);
                alert('An error occurred while processing your request.');
            }
        } else {
            alert('Please signup or signin');
            window.location.href = 'http://localhost:3200/api/'; // Redirect to the signup/signin page
        }
    });

    async function handleGetRequest(url) {
        const token = localStorage.getItem('authToken'); // Fetch the token from local storage

        if (token) {
            try {
                const response = await fetch(url, {
                    method: 'GET',
                    headers: {
                        'Authorization': token // Pass the token in the Authorization header
                    }
                });

                const contentType = response.headers.get('Content-Type');

                if (response.ok) {
                    if (contentType && contentType.includes('text/html')) {
                        // If the response is HTML, replace the entire document content with the response HTML
                        const html = await response.text();
                        history.pushState(null, null, url); // Change the URL to the provided URL

                        document.open();
                        document.write(html);
                        document.close();
                    } else if (contentType && contentType.includes('application/json')) {
                        // If the response is JSON, handle it accordingly
                        const data = await response.json();
                        console.log('JSON Response:', data);
                    }
                } else {
                    console.error('Failed to fetch the page:', response.statusText);
                }
            } catch (error) {
                console.error('Error during fetch:', error);
            }
        } else {
            alert('Please signup or signin');
            window.location.href = 'http://localhost:3200/api/'; // Redirect to the signup/signin page
        }
    }

    // Handle cancel button click
    document.getElementById('cancel-button').addEventListener('click', function() {
        const url = `/api/interview/viewStudent/<%= interviewID %>`; // The redirect URL on cancel
        handleGetRequest(url); // Call the handleGetRequest function
    });
</script>
